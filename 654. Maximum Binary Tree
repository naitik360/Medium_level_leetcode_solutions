class Solution {
public:
    int Max(vector<int>& v,int l,int r)
    {
        int val=INT_MIN,index=l;
        for(int i=l;i<r;i++)
        {
            if(v[i]>val)
            {
                val=v[i];
                index=i;
            }
        }
      return index;
    }
    TreeNode* solve(vector<int>& v,int l,int r)
    {
        if(l==r)
            return NULL;
        
        int mx = Max(v,l,r);
        TreeNode* root = new TreeNode(v[mx]);
        root->left = solve(v,l,mx);
        root->right = solve(v,mx+1,r);
        return root;
    }
    TreeNode* constructMaximumBinaryTree(vector<int>& v) {
        return solve(v,0,v.size());
    }
};
