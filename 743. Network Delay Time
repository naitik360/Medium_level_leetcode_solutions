class Solution {
public:
    int networkDelayTime(vector<vector<int>>& v, int n, int g) {
        vector<vector<pair<int,int>>> k(n);
        vector<int> dis(n,INT_MAX);
        for(int i=0;i<v.size();i++)
        {
            k[v[i][0]-1].push_back({v[i][1]-1,v[i][2]}); // 1---> n hai na ki 0--->n-1
        }
        
        queue<int> q;
        q.push(g-1);
        int ans=INT_MIN;
        dis[g-1]=0;
        while(q.size())
        {
            int p = q.front(); q.pop();
            for(auto i : k[p])
            {
                if(dis[i.first]>dis[p]+i.second)
                {
                    dis[i.first]=dis[p]+i.second;
                    q.push(i.first);
                }
            }
        }
        
        for(int i=0;i<n;i++)
        {
            ans=max(ans,dis[i]);
        }
      return ans==INT_MAX ? -1 : ans;  
    }
};// peel dable ke bn gaya
