class Solution {
public:
    vector<vector<int>> highestPeak(vector<vector<int>>& v) {
        vector<int> d{0,1,0,-1,0};
        queue<pair<int,int>> q;
        for(int i=0;i<v.size();i++)
        {
            for(int j=0;j<v[0].size();j++)
            {
                if(v[i][j])
                {
                    q.push({i,j});
                    v[i][j]=-1;
                }
            }
        }
        
        int dist=1;
        
        while(q.size())
        {
            int g = q.size();
            while(g--)
            {
                auto k = q.front(); q.pop();
                for(int i=0;i<4;i++)
                {
                    int nr = k.first + d[i];
                    int nc = k.second + d[i+1];
                    if(nr< 0|| nr>=v.size() || nc<0 || nc>=v[0].size() || v[nr][nc]==-1 || v[nr][nc]>0)
                         continue;
                    
                    v[nr][nc]=dist;
                    q.push({nr,nc});
                }
            }
          dist++;
        }
        
        for(int i=0;i<v.size();i++)
        {
            for(int j=0;j<v[0].size();j++)
            {
                if(v[i][j]==-1)
                {
                   v[i][j]=0;
                }
            }
        }
      return v;  
    }
};
